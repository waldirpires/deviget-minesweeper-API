/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.GameSessionConfigRequest;
import io.swagger.model.GameSessionConfigResponse;
import io.swagger.model.GameSessionUpdateRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-12-13T13:11:45.557Z")

@Api(value = "games", description = "the games API")
public interface GamesApi {

    @ApiOperation(value = "Retrieve an existing game session", nickname = "getGameSession", notes = "", response = GameSessionConfigResponse.class, tags={ "game", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Game retrieved successfully", response = GameSessionConfigResponse.class),
        @ApiResponse(code = 404, message = "Game session not found") })
    @RequestMapping(value = "/games/{session_id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<GameSessionConfigResponse> getGameSession(@ApiParam(value = "",required=true) @PathVariable("session_id") String sessionId);


    @ApiOperation(value = "Create a new game session", nickname = "startNewGameSession", notes = "", response = GameSessionConfigResponse.class, tags={ "game", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Game started successfully", response = GameSessionConfigResponse.class) })
    @RequestMapping(value = "/games",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<GameSessionConfigResponse> startNewGameSession(@ApiParam(value = "Game session configuration to be created" ,required=true )  @Valid @RequestBody GameSessionConfigRequest body);


    @ApiOperation(value = "updates the game board with user click", nickname = "update", notes = "", response = GameSessionConfigResponse.class, tags={ "game", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Game started successfully", response = GameSessionConfigResponse.class) })
    @RequestMapping(value = "/games/{session_id}/update",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<GameSessionConfigResponse> update(@ApiParam(value = "",required=true) @PathVariable("session_id") String sessionId,@ApiParam(value = "Game session updated" ,required=true )  @Valid @RequestBody GameSessionUpdateRequest body);

}
